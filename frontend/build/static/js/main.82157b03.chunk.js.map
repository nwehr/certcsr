{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["RequestForm","useState","password","setPassword","country","setCountry","state","setState","city","setCity","company","setCompany","name","setName","email","setEmail","submitWaiting","setSubmitWaiting","submit","e","a","preventDefault","axios","post","status","data","alert","Alert","variant","style","fontFamily","Form","onSubmit","Group","Label","Control","value","onChange","target","Button","type","disabled","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.82157b03.chunk.js","sourcesContent":["import React, { useState } from \"react\"\nimport { Form, Button, Alert } from \"react-bootstrap\"\nimport axios from \"axios\"\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nfunction RequestForm() {\n  const [password, setPassword] = useState(null)\n\n  const [country, setCountry] = useState(\"US\")\n  const [state, setState] = useState(\"Virginia\")\n  const [city, setCity] = useState(\"Roanoke\")\n  const [company, setCompany] = useState(\"Wehr Holdings, LLC\")\n  const [name, setName] = useState(\"\")\n  const [email, setEmail] = useState(\"\")\n\n  const [submitWaiting, setSubmitWaiting] = useState(false)\n\n  const submit = async (e) => {\n    e.preventDefault()\n\n    setSubmitWaiting(true)\n\n    try {\n      const { status, data } = await axios.post(\"/post-csr\", { country, state, city, company, name, email })\n      if (status == 200) {\n        setPassword(data.password)\n      }\n    }\n    catch (e) {\n      alert(e)\n    }\n\n    setSubmitWaiting(false)\n  }\n\n  if (password != null) {\n    return <Alert variant=\"dark\" style={{fontFamily:\"courier new; courier\"}}>{password}</Alert>\n  }\n\n  return <Form onSubmit={submit}>\n    <Form.Group>\n      <Form.Label>Country</Form.Label>\n      <Form.Control value={country} onChange={e => setCountry(e.target.value)} />\n    </Form.Group>\n    <Form.Group>\n      <Form.Label>State</Form.Label>\n      <Form.Control value={state} onChange={e => setState(e.target.value)} />\n    </Form.Group>\n    <Form.Group>\n      <Form.Label>City</Form.Label>\n      <Form.Control value={city} onChange={e => setCity(e.target.value)} />\n    </Form.Group>\n    <Form.Group>\n      <Form.Label>Company</Form.Label>\n      <Form.Control value={company} onChange={e => setCompany(e.target.value)} />\n    </Form.Group>\n    <Form.Group>\n      <Form.Label>Full Name</Form.Label>\n      <Form.Control value={name} onChange={e => setName(e.target.value)} />\n    </Form.Group>\n    <Form.Group>\n      <Form.Label>Email</Form.Label>\n      <Form.Control value={email} onChange={e => setEmail(e.target.value)} />\n    </Form.Group>\n    <Button variant=\"primary\" type=\"submit\" disabled={submitWaiting}>{submitWaiting ? \"Submit...\" : \"Submit\"}</Button>\n  </Form>\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <RequestForm />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}